entrega activ. 32
1 - Crear base de datos

carol=> CREATE DATABASE Pinta;
pinta=> create table users(id_user serial primary key, name varchar(10));
CREATE TABLE

pinta=> create table imgs (id_img serial primary key, titulo varchar(10));
CREATE TABLE


pinta=> create table likes (id_like serial primary key,id_img serial references imgs(id_img), id_user serial references users(id_user));
CREATE TABLE


create table tags (id_tag serial primary key, tag_txt varchar(10));

pinta=> create table tags_links (id_taglink serial primary key, id_img serial references imgs(id_img), id_tag serial references tags(id_tag));
CREATE TABLE

2. Ingresar 2 imagenes por usuario.
pinta=> INSERT INTO users (name) values('sofia');
pinta=> INSERT INTO users (name) values('marcelo');
pinta=> INSERT INTO users (name) values('juan');

pinta=> alter table imgs add column id_users integer references users(id_user); 
ALTER TABLE

pinta=> INSERT INTO imgs (titulo,id_users) values('sofia1.jpg', 1);
pinta=> INSERT INTO imgs (titulo,id_users) values('sofia2.jpg', 1);

pinta=> INSERT INTO imgs (titulo,id_users) values('mar1.jpg', 2);
pinta=> INSERT INTO imgs (titulo,id_users) values('mar2.jpg', 2);

pinta=> INSERT INTO imgs (titulo,id_users) values('ju1.jpg', 3);
pinta=> INSERT INTO imgs (titulo,id_users) values('ju2.jpg', 3);


3. Ingresar 3 likes por cada imagen.

ALTER TABLE likes ADD CONSTRAINT restriccion UNIQUE (id_img, id_user)
insert into likes (id_img, id_user) values (1,1);
insert into likes (id_img, id_user) values (2,1);
insert into likes (id_img, id_user) values (3,1);

insert into likes (id_img, id_user) values (1,2);
insert into likes (id_img, id_user) values (2,2);
insert into likes (id_img, id_user) values (3,2);

insert into likes (id_img, id_user) values (1,3);
insert into likes (id_img, id_user) values (2,3);
insert into likes (id_img, id_user) values (3,3);


4. Ingresar 8 tags

insert into tags(tag_txt ) values ('playa');
insert into tags(tag_txt ) values ('almuerzo');
insert into tags(tag_txt ) values ('trabajo');
insert into tags(tag_txt ) values ('finde');
insert into tags(tag_txt ) values ('paseo');
insert into tags(tag_txt ) values ('saludos');
insert into tags(tag_txt ) values ('nieve');
insert into tags(tag_txt ) values ('casa');

INSERT INTO tag (tag) VALUES ('comida');

5. Ingresar 3 tags por imagen

insert into tag_link (id_img, id_tag) values (1, 1);

insert into tag_link (id_img, id_tag) values (1, 2);

insert into tag_link (id_img, id_tag) values (1, 4);

insert into tag_link (id_img, id_tag) values (2, 2);

insert into tag_link (id_img, id_tag) values (2, 3);

insert into tag_link (id_img, id_tag) values (2, 7);

insert into tag_link (id_img, id_tag) values (3, 1);

insert into tag_link (id_img, id_tag) values (3, 2);

insert into tag_link (id_img, id_tag) values (3, 7);

insert into tag_link (img_id, id_tag) values (4, 2);

insert into tag_link (img_id, id_tag) values (4, 3);

insert into tag_link (id_img, id_tag) values (4, 6);


6-Crear una consulta que muestre el nombre de la imagen y la cantidad de likes que tiene esa imagen.

SELECT images.titulo, count(likes.id) FROM images LEFT JOIN likes ON images.id = img_id GROUP BY images.id;

7-Crear una consulta que muestre el nombre del usuario y los nombres de las fotos que le pertenecen.
SELECT users.nombre, images.titulo FROM users LEFT JOIN images ON users.id = images.user_id ORDER BY users.id;

8- Crear una consulta que muestre el nombre del tag y la cantidad de imagenes asociadas a ese tag

SELECT tag.tag, COUNT (tag_link.id) FROM tag LEFT JOIN tag_link ON tag.id = tag_link.tag_id GROUP BY tag.tag;
























